{"version":3,"sources":["Components/Messages.js","Components/FileUpload.js","Components/Chat.js"],"names":["makeStyles","theme","root","flexGrow","position","padding","paper","backgroundColor","avatar","display","verticalAlign","chat","paddingLeft","width","chatHeading","marginBlockStart","marginBlockEnd","fontSize","fontWeight","color","chatTimming","chatText","purple","palette","getContrastText","deepPurple","emojiDiv","right","top","emojiDivInner","emojiBtn","allEmoji","borderRadius","paddingRight","countEmojiBtn","Messages","useStyles","displayImage","height","imageName","imageDiv","marginLeft","marginRight","marginTop","FileUpload","setState","file","setAllSettings","allSettings","classes","useParams","useState","open","setOpen","progress","setProgress","progressBar","setProgressBar","setMessage","handleClose","fileObj","URL","createObjectURL","handleUpload","e","preventDefault","uploadRef","storage","ref","target","put","on","snapshot","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","downloadURL","Dialog","onClose","aria-labelledby","aria-describedby","className","src","alt","name","Typography","DialogTitle","id","DialogContent","autoComplete","onSubmit","TextField","label","fullWidth","margin","variant","style","onChange","value","Box","alignItems","mr","LinearProgress","minWidth","Math","round","DialogActions","Button","onClick","type","autoFocus","paddingBottom","paddingTop","overflowY","overflowX","footer","message","roomName","border","borderLeft","borderRight","roomNameText","iconDesign","footerContent","inputFile","rightButtons","justifyContent","rightButton","IOSSwitch","withStyles","spacing","switchBase","transform","common","white","opacity","thumb","track","grey","transition","transitions","create","checked","focusVisible","props","Switch","focusVisibleClassName","disableRipple","Chat","params","preview","setPreview","displayName","showEntrance","showKeyName","showQrcode","namesFly","testMode","webSocket","entranceTitle","entranceSubTitle","titleColor","subtitleColor","colorType","testNameNumber","nameColor","speed","entranceVideo","entranceBg","qrcodeBg","keyNameBg","keyNameImage","predictPopulation","modalState","setModalState","setFileName","eventName","setEventName","useEffect","titleFontSize","subtitleFontSize","keyNameDelay","db","collection","doc","onSnapshot","data","openModal","handelFileUpload","files","handleChange","event","handleCheck","handleChangeRadio","Grid","item","textDecoration","to","xs","FormControlLabel","control","container","gutterBottom","Slider","defaultValue","getAriaValueText","valueLabelDisplay","marks","min","max","Radio","inputProps","labelPlacement","accept","htmlFor","IconButton","aria-label","component","background","bottom","Fab","userData","JSON","parse","localStorage","getItem","uid","obj","timestamp","firebase","firestore","Timestamp","now","set","merge","res","catch","err","extendedIcon"],"mappings":"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","file":"static/js/12.cd564f78.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepPurple } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { AiFillLike } from \"react-icons/ai\";\nimport { AiFillFire } from \"react-icons/ai\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { db } from \"../Firebase/Firebase\";\nimport { useParams } from \"react-router-dom\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Anchorme } from \"react-anchorme\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: \"relative\",\n    padding: \"8px\",\n  },\n  paper: {\n    padding: \"10px\",\n    \"&:hover\": {\n      backgroundColor: \"#1f2436\",\n    },\n  },\n  avatar: {\n    display: \"inline-block\",\n    verticalAlign: \"top\",\n  },\n  chat: {\n    display: \"inline-block\",\n    paddingLeft: \"1rem\",\n    width: \"calc(100% - 50px)\",\n  },\n  chatHeading: {\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    display: \"inline-block\",\n    fontSize: \"1rem\",\n    fontWeight: \"600\",\n    color: \"white\",\n  },\n  chatTimming: {\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    display: \"inline-block\",\n    paddingLeft: \"0.5em\",\n    color: \"white\",\n  },\n  chatText: {\n    color: \"#dcddde\",\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: \"#3f51b5\",\n  },\n  emojiDiv: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n  },\n  emojiDivInner: {\n    position: \"absolute\",\n    right: 0,\n    padding: \"0 35px 0 32px\",\n  },\n  emojiBtn: {\n    fontSize: \"1.1rem\",\n    color: \"rgb(255 195 54)\",\n  },\n  allEmoji: {\n    backgroundColor: \"#2d2e31ba\",\n    borderRadius: \"5px\",\n    paddingLeft: \"2px\",\n    paddingRight: \"2px\",\n    display: \"flex\",\n  },\n  countEmojiBtn: {\n    padding: \"3px\",\n    borderRadius: \"4px\",\n    fontSize: \"0.8em\",\n    backgroundColor: \"#ffffff4a\",\n    color: \"#cacaca\",\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    \"&:hover\": {\n      backgroundColor: \"#ffffff4a\",\n      color: \"#e7e7e7\",\n    },\n  },\n}));\n\nfunction Messages({ values, msgId }) {\n  const [style, setStyle] = useState({ display: \"none\" });\n  const [deleteModal, setDeleteModal] = useState(false);\n  const classes = useStyles();\n\n  const uid = JSON.parse(localStorage.getItem(\"userDetails\")).uid;\n  const messegerUid = values.uid;\n  const date = values.timestamp.toDate();\n  const day = date.getDate();\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const hour = date.getHours();\n  const minute = date.getMinutes();\n  const time = `${day}/${month}/${year}   ${hour}:${minute}`;\n\n  const numLikes = values.likeCount;\n  const numFire = values.fireCount;\n  const numHeart = values.heartCount;\n\n  const userLiked = values.likes[uid];\n  const userFire = values.fire[uid];\n  const userHeart = values.heart[uid];\n\n  const postImg = values.postImg;\n\n  const eventId = useParams().id;\n\n  const selectedLike = userLiked\n    ? { color: \"#8ff879\", backgroundColor: \"#545454\" }\n    : null;\n\n  const selectedHeart = userHeart\n    ? { color: \"#ff527d\", backgroundColor: \"#545454\" }\n    : null;\n\n  const selectedFire = userFire\n    ? { color: \"#ffc336\", backgroundColor: \"#545454\" }\n    : null;\n\n  const showDeleteModal = () => {\n    setDeleteModal(!deleteModal);\n  };\n\n  const heartClick = () => {\n    const messageDoc = db\n      .collection(\"events\")\n      .doc(eventId)\n      .collection(\"messages\")\n      .doc(msgId);\n    if (userHeart) {\n      return db\n        .runTransaction((transaction) => {\n          // This code may get re-run multiple times if there are conflicts.\n          return transaction.get(messageDoc).then((doc) => {\n            if (!doc) {\n              return;\n            }\n\n            let newHeartCount = doc.data().heartCount - 1;\n            let newHeart = doc.data().heart ? doc.data().heart : {};\n            newHeart[uid] = false;\n\n            transaction.update(messageDoc, {\n              heartCount: newHeartCount,\n              heart: newHeart,\n            });\n          });\n        })\n        .then(() => {\n          console.log(\"Disiked\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      return db\n        .runTransaction((transaction) => {\n          // This code may get re-run multiple times if there are conflicts.\n          return transaction.get(messageDoc).then((doc) => {\n            if (!doc) {\n              console.log(\"doc not found\");\n              return;\n            }\n\n            let newHeartCount = doc.data().heartCount + 1;\n            let newHeart = doc.data().heart ? doc.data().heart : {};\n            newHeart[uid] = true;\n\n            transaction.update(messageDoc, {\n              heartCount: newHeartCount,\n              heart: newHeart,\n            });\n          });\n        })\n        .then(() => {\n          console.log(\"Liked\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const fireClick = () => {\n    const messageDoc = db\n      .collection(\"events\")\n      .doc(eventId)\n      .collection(\"settings\")\n      .doc(msgId);\n    if (userFire) {\n      return db\n        .runTransaction((transaction) => {\n          // This code may get re-run multiple times if there are conflicts.\n          return transaction.get(messageDoc).then((doc) => {\n            if (!doc) {\n              console.log(\"doc not found\");\n              return;\n            }\n\n            let newFireCount = doc.data().fireCount - 1;\n            let newFire = doc.data().fire ? doc.data().fire : {};\n            newFire[uid] = false;\n\n            transaction.update(messageDoc, {\n              fireCount: newFireCount,\n              fire: newFire,\n            });\n          });\n        })\n        .then(() => {\n          console.log(\"Disiked\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      return db\n        .runTransaction((transaction) => {\n          // This code may get re-run multiple times if there are conflicts.\n          return transaction.get(messageDoc).then((doc) => {\n            if (!doc) {\n              console.log(\"doc not found\");\n              return;\n            }\n\n            let newFireCount = doc.data().fireCount + 1;\n            let newFire = doc.data().fire ? doc.data().fire : {};\n            newFire[uid] = true;\n\n            transaction.update(messageDoc, {\n              fireCount: newFireCount,\n              fire: newFire,\n            });\n          });\n        })\n        .then(() => {\n          console.log(\"Liked\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const likeClick = () => {\n    const messageDoc = db\n      .collection(\"events\")\n      .doc(eventId)\n      .collection(\"settings\")\n    // .doc(msgId);\n    if (userLiked) {\n      return db\n        .runTransaction((transaction) => {\n          // This code may get re-run multiple times if there are conflicts.\n          return transaction.get(messageDoc).then((doc) => {\n            if (!doc) {\n              console.log(\"doc not found\");\n              return;\n            }\n\n            let newLikeCount = doc.data().likeCount - 1;\n            let newLikes = doc.data().likes ? doc.data().likes : {};\n            newLikes[uid] = false;\n\n            transaction.update(messageDoc, {\n              likeCount: newLikeCount,\n              likes: newLikes,\n            });\n          });\n        })\n        .then(() => {\n          console.log(\"Disiked\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      return db\n        .runTransaction((transaction) => {\n          // This code may get re-run multiple times if there are conflicts.\n          return transaction.get(messageDoc).then((doc) => {\n            if (!doc) {\n              console.log(\"doc not found\");\n              return;\n            }\n\n            let newLikeCount = doc.data().likeCount + 1;\n            let newLikes = doc.data().likes ? doc.data().likes : {};\n            newLikes[uid] = true;\n\n            transaction.update(messageDoc, {\n              likeCount: newLikeCount,\n              likes: newLikes,\n            });\n          });\n        })\n        .then(() => {\n          console.log(\"Liked\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const deleteMsg = (id) => {\n    db.collection(\"events\")\n      .doc(eventId)\n      .collection(\"settings\")\n      .doc(id)\n      .delete()\n      .then((res) => {\n        console.log(\"deleted successfully\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Grid item xs={12} className={classes.root}>\n      {deleteModal ? (\n        <DeleteModal\n          msgId={msgId}\n          text={values.text}\n          postImg={postImg}\n          deleteMsg={deleteMsg}\n          handleModal={showDeleteModal}\n        />\n      ) : null}\n      <div\n        className={classes.paper}\n        onMouseEnter={(e) => {\n          setStyle({ display: \"block\" });\n        }}\n        onMouseLeave={(e) => {\n          setStyle({ display: \"none\" });\n        }}\n      >\n        <div className={classes.avatar}>\n          <Avatar\n            alt={values.userName}\n            src={values.userImg}\n            className={classes.purple}\n          />\n        </div>\n\n        <div className={classes.chat}>\n          <div>\n            <h6 className={classes.chatHeading}>{values.userName}</h6>\n            <p className={classes.chatTimming}>{time}</p>\n          </div>\n\n          <div className={classes.chatText}>\n            {values.text.split(\"\\n\").map((txt, idx) => (\n              <div key={idx}>\n                <Anchorme target=\"_blank\" rel=\"noreferrer noopener\">\n                  {txt}\n                </Anchorme>\n              </div>\n            ))}\n          </div>\n\n          <Grid item xs={12} md={12} style={{ paddingTop: \"5px\" }}>\n            {postImg ? (\n              <img\n                src={postImg}\n                alt=\"user\"\n                style={{ height: \"30vh\", width: \"auto\", borderRadius: \"4px\" }}\n              />\n            ) : null}\n          </Grid>\n\n          <div style={{ paddingTop: \"5px\", display: \"flex\" }}>\n            {numLikes > 0 ? (\n              <div style={{ padding: \"3px\" }}>\n                <IconButton\n                  component=\"span\"\n                  onClick={likeClick}\n                  className={classes.countEmojiBtn}\n                  style={selectedLike}\n                >\n                  <AiFillLike />\n                  <div style={{ paddingLeft: \"2px\" }}>{numLikes}</div>\n                </IconButton>\n              </div>\n            ) : null}\n\n            {numFire > 0 ? (\n              <div style={{ padding: \"3px\" }}>\n                <IconButton\n                  component=\"span\"\n                  onClick={fireClick}\n                  className={classes.countEmojiBtn}\n                  style={selectedFire}\n                >\n                  <AiFillFire />\n                  <div style={{ paddingLeft: \"2px\" }}>{numFire}</div>\n                </IconButton>\n              </div>\n            ) : null}\n\n            {numHeart > 0 ? (\n              <div style={{ padding: \"3px\" }}>\n                <IconButton\n                  component=\"span\"\n                  onClick={heartClick}\n                  className={classes.countEmojiBtn}\n                  style={selectedHeart}\n                >\n                  <AiFillHeart />\n                  <div style={{ paddingLeft: \"2px\" }}>{numHeart}</div>\n                </IconButton>\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        <div className={classes.emojiDiv} style={style}>\n          <div className={classes.emojiDivInner}>\n            <div className={classes.allEmoji}>\n              <IconButton\n                component=\"span\"\n                style={{ padding: \"4px\" }}\n                onClick={likeClick}\n              >\n                <AiFillLike className={classes.emojiBtn} />\n              </IconButton>\n              <IconButton\n                component=\"span\"\n                style={{ padding: \"4px\" }}\n                onClick={fireClick}\n              >\n                <AiFillFire className={classes.emojiBtn} />\n              </IconButton>\n              <IconButton\n                component=\"span\"\n                style={{ padding: \"4px\" }}\n                onClick={heartClick}\n              >\n                <AiFillHeart className={classes.emojiBtn} />\n              </IconButton>\n              {uid === messegerUid ? (\n                <IconButton\n                  component=\"span\"\n                  style={{ padding: \"4px\" }}\n                  onClick={showDeleteModal}\n                >\n                  <AiFillDelete\n                    className={classes.emojiBtn}\n                    color=\"#c3c3c3f0\"\n                  />\n                </IconButton>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default Messages;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { storage } from \"../Firebase/Firebase\";\nimport { useParams } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { db } from \"../Firebase/Firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  displayImage: {\n    height: \"105px\",\n    width: \"180px\",\n  },\n  imageName: {\n    paddingLeft: \"15px\",\n    fontSize: \"1.3em\",\n  },\n  imageDiv: {\n    marginLeft: \"16px\",\n    marginRight: \"16px\",\n    marginTop: \"-33px\",\n  },\n}));\n\nfunction FileUpload({ setState, file, setAllSettings,allSettings}) {\n  const params = useParams();\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [progress, setProgress] = useState(0);\n  const [progressBar, setProgressBar] = useState({ display: \"none\" });\n  const [message, setMessage] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setState();\n  };\n\n  const sendMsg = (downloadURL) => {\n    if (params.id) {\n      const userData = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n      if (userData) {\n        const displayName = userData.displayName;\n        // const imgUrl = userData.photoURL;\n        const uid = userData.uid;\n        const showEntrance = false;\n        const showKeyName = false;\n        const showQrcode = false;\n        const entranceTitle = '';\n        const entranceSubTitle = '';\n        const titleColor='#ffffff';\n        const entranceBg = '';\n        const qrcodeBg = '';\n        const  keyNameBg= '';\n        const predictPopulation = 0;\n        const obj = {\n          text: message,\n          timestamp: firebase.firestore.Timestamp.now(),\n          showEntrance: showEntrance,\n          showKeyName: showKeyName,\n          showQrcode: showQrcode,\n          uid: uid,\n          entranceTitle: entranceTitle,\n          entranceSubTitle: entranceSubTitle,\n          titleColor: titleColor,\n          entranceBg: entranceBg,\n          qrcodeBg: qrcodeBg,\n          keyNameBg: keyNameBg,\n          predictPopulation: predictPopulation,\n        };\n\n        db.collection(\"events\")\n          .doc(params.id)\n          .collection(\"settings\")\n          .add(obj)\n          .then((res) => {\n            console.log(\"setting success\");\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n\n      setMessage(\"\");\n    }\n  };\n  const fileObj = URL.createObjectURL(file);\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n    setProgressBar({ display: \"block\" });\n    const uploadRef = storage.ref(`images/${file.target}`).put(file);\n    uploadRef.on(\n      \"state_changed\",\n      (snapshot) => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(progress);\n      },\n      (error) => {\n        console.log(error);\n      },\n      () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        uploadRef.snapshot.ref.getDownloadURL().then((downloadURL) => {\n          // sendMsg(downloadURL);\n          const {target} = file;\n          setAllSettings({...allSettings,[target]:downloadURL})\n         \n        });\n        handleClose();\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <div className={classes.imageDiv}>\n          <img src={fileObj} alt={file.name} className={classes.displayImage} />\n          <Typography className={classes.imageName}>{file.name}</Typography>\n        </div>\n\n        <DialogTitle id=\"alert-dialog-title\">Upload Image</DialogTitle>\n\n        <DialogContent>\n          <form\n            autoComplete=\"off\"\n            onSubmit={(e) => {\n              handleUpload(e);\n            }}\n          >\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Add A Message\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              style={{\n                backgroundColor: \"rgb(45, 45, 73)\",\n                borderRadius: \"5px\",\n              }}\n              onChange={(e) => {\n                setMessage(e.target.value);\n              }}\n            />\n          </form>\n\n          <div style={progressBar}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box width=\"100%\" mr={1}>\n                <LinearProgress variant=\"determinate\" value={progress} />\n              </Box>\n              <Box minWidth={35}>\n                <Typography variant=\"body2\">{Math.round(progress)}%</Typography>\n              </Box>\n            </Box>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} style={{ color: \"white\" }}>\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={(e) => handleUpload(e)}\n            color=\"primary\"\n            autoFocus\n            variant=\"contained\"\n          >\n            Upload\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default FileUpload;\n","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Messages from \"./Messages\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { db } from \"../Firebase/Firebase\";\nimport firebase from \"firebase/app\";\nimport { BiHash } from \"react-icons/bi\";\nimport { RiImageAddLine } from \"react-icons/ri\";\nimport FileUpload from \"./FileUpload\";\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ColorPicker, createColor } from \"material-ui-color\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    color: \"white\"\n  },\n  chat: {\n    position: \"relative\",\n    height: \"calc(100vh - 200px)\",\n    paddingLeft: \"10px\",\n    paddingBottom: \"50px\",\n    paddingTop: \"5px\",\n    overflowY:\"scroll\",\n    overflowX:\"hidden\"\n\n  },\n  footer: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    paddingTop: \"10px\",\n  },\n  message: {\n    width: \"100%\",\n    color: \"white\",\n  },\n  roomName: {\n    border: \"1px solid #0000004a\",\n    borderLeft: 0,\n    borderRight: 0,\n    padding: \"15px\",\n    display: \"flex\",\n    color: \"#e5e5e5\",\n  },\n  roomNameText: {\n    marginBlockEnd: 0,\n    marginBlockStart: 0,\n    paddingLeft: \"5px\",\n  },\n  iconDesign: {\n    fontSize: \"1.5em\",\n    color: \"#e5e5e5\",\n  },\n  footerContent: {\n    display: \"flex\",\n    backgroundColor: \"#303753\",\n    borderRadius: \"5px\",\n    alignItems: \"center\",\n  },\n  inputFile: {\n    display: \"none\",\n  },\n  rightButtons: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"end\",\n  },\n  rightButton: {\n    marginRight: \"5px\"\n  }\n}));\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    marginLeft: 30,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\n\nfunction Chat() {\n  const classes = useStyles();\n  const params = useParams();\n  const [preview, setPreview] = useState({});\n\n  const [allSettings, setAllSettings] = useState(\n    {\n\n\n      displayName: '',\n      showEntrance: false,\n      showKeyName: false,\n      showQrcode: false,\n      namesFly: true,\n      testMode: false,\n      webSocket: false,\n      entranceTitle: '',\n      entranceSubTitle: '',\n      titleColor: '#ffffff',\n      subtitleColor: '#ffffff',\n      colorType: 'random',\n      testNameNumber: '0',\n      nameColor: '#ffffff',\n      speed: 6,\n      entranceVideo: '',\n      entranceBg: '',\n      qrcodeBg: '',\n      keyNameBg: '',\n      keyNameImage: '',\n      predictPopulation: 0,\n\n    }\n\n\n\n  );\n  const [modalState, setModalState] = useState(false);\n  const [file, setFileName] = useState(null);\n\n  const [eventName, setEventName] = useState(\"\");\n  const [uid, setUid] = useState(\"\");\n  useEffect(() => {\n    setAllSettings(\n      {\n        displayName: '',\n        showEntrance: false,\n        showKeyName: false,\n        showQrcode: false,\n        namesFly: false,\n        testMode: false,\n        webSocket:false,\n        entranceTitle: '',\n        entranceSubTitle: '',\n        titleColor: '#ffffff',\n        colorType: 'random',\n        fontSize: '50',\n        titleFontSize: '20',\n        subtitleFontSize: '50',\n        keyNameDelay: '0',\n        nameColor: '#ffffff',\n        testNameNumber: '0',\n        speed: 6,\n        entranceVideo: '',\n        subtitleColor: '#ffffff',\n        entranceBg: '',\n        qrcodeBg: '',\n        keyNameBg: '',\n        keyNameImage: '',\n        predictPopulation: 0,\n      }\n    );\n    if (params.id) {\n      db.collection(\"events\")\n        .doc(params.id)\n        .onSnapshot((snapshot) => {\n          setEventName(snapshot.data().eventName);\n        });\n      db.collection(\"events\")\n        .doc(params.id)\n        .onSnapshot((snapshot) => {\n\n          // const data = snapshot.docs.map((doc) => (doc.data()))\n          setAllSettings(\n            snapshot.data()\n          );\n\n        });\n    }\n  }, [params]);\n\n  const sendSettings = (e) => {\n    e.preventDefault();\n\n    if (allSettings && params.id) {\n      const userData = JSON.parse(localStorage.getItem(\"userDetails\"));\n      if (userData) {\n        const displayName = userData.displayName;\n        // const imgUrl = userData.photoURL;\n        const uid = userData.uid;\n        const showEntrance = allSettings.showEntrance || false;\n        const showKeyName = allSettings.showKeyName || false;\n        const showQrcode = allSettings.showQrcode || false;\n        const namesFly = allSettings.namesFly || false;\n        const testMode = allSettings.testMode || false;\n        const webSocket = allSettings.webSocket || false;\n        const entranceTitle = allSettings.entranceTitle || '';\n        const entranceSubTitle = allSettings.entranceSubTitle || '';\n        const titleColor = allSettings.titleColor || '';\n        const testNameNumber = allSettings.testNameNumber || '0';\n        const colorType = allSettings.colorType || '';\n        const fontSize = allSettings.fontSize || '50';\n        const titleFontSize = allSettings.titleFontSize || '20';\n        const subtitleFontSize = allSettings.subtitleFontSize || '50';\n        const keyNameDelay = allSettings.keyNameDelay || '0';\n        const nameColor = allSettings.nameColor || '';\n        const speed = allSettings.speed || 6;\n        const entranceVideo = allSettings.entranceVideo || '';\n        const subtitleColor = allSettings.subtitleColor || '';\n        const entranceBg = allSettings.entranceBg || '';\n        const qrcodeBg = allSettings.qrcodeBg || '';\n        const keyNameBg = allSettings.keyNameBg || '';\n        const keyNameImage = allSettings.keyNameImage || '';\n        const predictPopulation = allSettings.predictPopulation || 0;\n        let obj = {\n          // displayName: displayName,\n          timestamp: firebase.firestore.Timestamp.now(),\n          showEntrance: showEntrance,\n          showKeyName: showKeyName,\n          showQrcode: showQrcode,\n          namesFly: namesFly,\n          testMode: testMode,\n          webSocket:webSocket,\n          uid: uid,\n          entranceTitle: entranceTitle,\n          entranceSubTitle: entranceSubTitle,\n          titleColor: titleColor,\n          subtitleColor: subtitleColor,\n          colorType: colorType,\n          fontSize: fontSize,\n          testNameNumber: testNameNumber,\n          titleFontSize: titleFontSize,\n          subtitleFontSize: subtitleFontSize,\n          keyNameDelay: keyNameDelay,\n          nameColor: nameColor,\n          speed: speed,\n          entranceVideo: entranceVideo,\n          entranceBg: entranceBg,\n          qrcodeBg: qrcodeBg,\n          keyNameBg: keyNameBg,\n          keyNameImage: keyNameImage,\n          predictPopulation: predictPopulation,\n        };\n        db.collection(\"events\")\n          .doc(params.id)\n          // .collection(\"settings\")\n          // console.log('obj');\n          // console.log(obj)\n          .set(obj, { merge: true })\n          .then((res) => {\n            console.log(\"settings sent\");\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n\n    }\n  };\n\n\n  const openModal = () => {\n    setModalState(!modalState);\n  };\n\n\n  const handelFileUpload = (e) => {\n    e.preventDefault();\n\n    if (e.target.files[0]) {\n      e.target.files[0].target = e.target.name;\n      setPreview({ ...preview, [e.target.name]: URL.createObjectURL(e.target.files[0]) });\n      setFileName(e.target.files[0]);\n      openModal();\n    }\n    e.target.value = null;\n  };\n  const handleChange = (event) => {\n    setAllSettings({ ...allSettings, [event.target.name]: event.target.value });\n  };\n\n  const handleCheck = (event) => {\n    setAllSettings({ ...allSettings, [event.target.name]: event.target.checked });\n  };\n\n  const handleTitleColor = (value) => {\n    setAllSettings({ ...allSettings, titleColor: value });\n  };\n\n  const handleSutTitleColor = (value) => {\n    setAllSettings({ ...allSettings, subtitleColor: value });\n  };\n  const handleNameColor = (value) => {\n    setAllSettings({ ...allSettings, nameColor: value });\n  };\n  const handleChangeRadio = (event) => {\n    setAllSettings({ ...allSettings, nameColor: '', colorType: event.target.value })\n  }\n  const handleChangeSpeed = (event, value) => {\n    setAllSettings({ ...allSettings, speed: value })\n  }\n\n  function valuetext(value) {\n    return `${value}秒`;\n  }\n  return (\n    <div className={classes.root}>\n      {modalState ? <FileUpload setState={openModal} file={file} setAllSettings={setAllSettings} allSettings={allSettings} /> : null}\n      <Grid item  className={classes.roomName}>\n        <BiHash className={classes.iconDesign} />\n        <h3 className={classes.roomNameText}>{eventName}</h3>\n        <div className={classes.rightButtons}>\n          <Button className={classes.rightButton} variant=\"contained\" color=\"primary\" >\n            <Link style={{ textDecoration: \"none\" }} to={`/`}>\n              主場頁面\n            </Link>\n          </Button>\n          <Button style={{ textDecoration: \"none\" }} className={classes.rightButton} variant=\"contained\" color=\"primary\" >\n            <Link style={{ textDecoration: \"none\" }} to={`/keyname`}>\n              輸入名字頁面\n            </Link>\n          </Button>\n          <Button style={{ textDecoration: \"none\" }} className={classes.rightButton} variant=\"contained\" color=\"primary\" >\n            <Link style={{ textDecoration: \"none\" }} to={`/qrcode/`}>\n              掃QRcode頁面\n            </Link>\n          </Button>\n          {/* <Button style={{ textDecoration: \"none\" }} className={classes.rightButton} variant=\"contained\" color=\"primary\" >\n            <Link to={`/namemapping`}>\n              配對名字頁面\n            </Link>\n          </Button> */}\n        </div>\n      </Grid>\n      <Grid item xs=\"auto\" className={classes.chat}>\n\n          <Grid item xs={12}>\n            {/* <FormControlLabel\n              control={<IOSSwitch checked={allSettings.showEntrance} onChange={(e) => handleCheck(e)} name=\"showEntrance\" />}\n              label=\"開放主場頁面\"\n            />\n            <FormControlLabel\n              control={<IOSSwitch checked={allSettings.showQrcode} onChange={(e) => handleCheck(e)} name=\"showQrcode\" />}\n              label=\"開放QRcode頁面\"\n            />\n            <FormControlLabel\n              control={<IOSSwitch checked={allSettings.showKeyName} onChange={(e) => handleCheck(e)} name=\"showKeyName\" />}\n              label=\"開放輸入姓名 頁面\"\n            /> */}\n            <FormControlLabel\n              control={<IOSSwitch checked={allSettings.namesFly} onChange={(e) => handleCheck(e)} name=\"namesFly\" />}\n              label=\"動畫開始(允許姓名入場)\"\n            />\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item xs=\"auto\">\n              <form autoComplete=\"off\">\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"主題文字\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={allSettings.entranceTitle}\n                  name=\"entranceTitle\"\n                  onChange={e => handleChange(e)}\n                  style={{\n                    backgroundColor: \"rgb(45, 45, 73)\",\n                    borderRadius: \"5px\",\n                    color: \"white\",\n                  }}\n                />\n\n                <span>主題文字顏色</span><ColorPicker value={allSettings.titleColor} onChange={handleTitleColor} />\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"主題文字大小\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={allSettings.titleFontSize}\n                  name=\"titleFontSize\"\n                  onChange={e => handleChange(e)}\n                  style={{\n                    backgroundColor: \"rgb(45, 45, 73)\",\n                    borderRadius: \"5px\",\n                    color: \"white\",\n                  }}\n                />\n                <hr />\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"副主題文字\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={allSettings.entranceSubTitle}\n                  name=\"entranceSubTitle\"\n                  onChange={e => handleChange(e)}\n                  style={{\n                    backgroundColor: \"rgb(45, 45, 73)\",\n                    borderRadius: \"5px\",\n                    color: \"white\",\n                  }}\n                />\n\n                <span>副主題文字顏色</span><ColorPicker value={allSettings.subtitleColor} onChange={handleSutTitleColor} />\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"副主題文字大小\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={allSettings.subtitleFontSize}\n                  name=\"subtitleFontSize\"\n                  onChange={e => handleChange(e)}\n                  style={{\n                    backgroundColor: \"rgb(45, 45, 73)\",\n                    borderRadius: \"5px\",\n                    color: \"white\",\n                  }}\n                />\n                <hr />\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"達陣次數\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={allSettings.predictPopulation}\n                  name=\"predictPopulation\"\n                  onChange={e => handleChange(e)}\n                  style={{\n                    backgroundColor: \"rgb(45, 45, 73)\",\n                    borderRadius: \"5px\",\n                    color: \"white\",\n                  }}\n                />\n                <Typography id=\"discrete-slider\" gutterBottom>\n                  名字進場秒數\n                </Typography>\n                <Slider\n                  defaultValue={6}\n                  getAriaValueText={valuetext}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  value={allSettings.speed\n                  }\n                  onChange={handleChangeSpeed}\n                  marks\n                  min={1}\n                  max={11}\n                />\n\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"名字大小\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={allSettings.fontSize}\n                  name=\"fontSize\"\n                  onChange={e => handleChange(e)}\n                  style={{\n                    backgroundColor: \"rgb(45, 45, 73)\",\n                    borderRadius: \"5px\",\n                    color: \"white\",\n                  }}\n                />\n                <FormControlLabel\n                  value=\"specific\"\n                  control={<Radio\n                    checked={allSettings.colorType === 'specific'}\n                    onChange={(e) => handleChangeRadio(e)}\n                    name=\"radio-buttons\"\n                    inputProps={{ 'aria-label': 'A' }}\n                  />}\n                  label=\"選定名字顏色\"\n                  labelPlacement=\"start\"\n                />\n\n                <FormControlLabel\n                  value=\"random\"\n                  control={<Radio\n                    checked={allSettings.colorType === 'random'}\n                    onChange={(e) => handleChangeRadio(e)}\n                    value='random'\n                    name=\"radio-buttons\"\n                    inputProps={{ 'aria-label': 'A' }}\n                  />}\n                  label=\"名字顏色亂數\"\n                  labelPlacement=\"start\"\n                />\n\n                <br />\n                {allSettings.colorType === 'specific' ? <><span>名字顏色</span><ColorPicker value={allSettings.nameColor} onChange={handleNameColor} /></> : null}\n              </form>\n            </Grid>\n            <Grid item xs=\"auto\">\n              {/* <TextField\n                id=\"outlined-basic\"\n                label=\"主場景背景\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={allSettings.entranceBg}\n                name=\"entranceBg\"\n                onChange={e => handleChange(e)}\n                style={{\n                  backgroundColor: \"rgb(45, 45, 73)\",\n                  borderRadius: \"5px\",\n                  color: \"white\",\n                }}\n              /> */}\n              {/* <TextField\n                id=\"outlined-basic\"\n                label=\"主場景Youtube影片Id(不建議使用)\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={allSettings.entranceVideo}\n                name=\"entranceVideo\"\n                onChange={e => handleChange(e)}\n                style={{\n                  backgroundColor: \"rgb(45, 45, 73)\",\n                  borderRadius: \"5px\",\n                  color: \"white\",\n                }}\n              /> */}\n              <br />\n              {/* {preview['entranceBg'] ? <img width=\"80\" src={preview['entranceBg']} />:null} */}\n              {allSettings.entranceBg  ? <img width=\"80\" src={allSettings.entranceBg} /> : null}\n              <input\n                accept=\"image/*\"\n                className={classes.inputFile}\n                id=\"icon-button-file\"\n                type=\"file\"\n                name=\"entranceBg\"\n                onChange={(e) => handelFileUpload(e)}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"span\"\n                >\n                  <RiImageAddLine style={{ color: \"#b9bbbe\" }} />\n                </IconButton>\n                上傳會場背景\n              </label>\n              <br />\n\n              {/* {preview['qrcodeBg'] && <img width=\"80\" src={preview['qrcodeBg']} />}\n              {allSettings.qrcodeBg && !preview['qrcodeBg'] ? <img width=\"80\" src={allSettings.qrcodeBg} /> : null}\n              <input\n                accept=\"image/*\"\n                className={classes.inputFile}\n                id=\"icon-button-qrcodebg\"\n                type=\"file\"\n                name=\"qrcodeBg\"\n                onChange={(e) => handelFileUpload(e)}\n              /> */}\n              {/* <label htmlFor=\"icon-button-qrcodebg\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"span\"\n                >\n                  <RiImageAddLine style={{ color: \"#b9bbbe\" }} />\n                </IconButton>\n                上傳掃描背景\n              </label>\n              <br /> */}\n              {/* {preview['keyNameBg'] && <img width=\"80\" src={preview['keyNameBg']} />} */}\n              {allSettings.keyNameBg  ? <img width=\"80\" src={allSettings.keyNameBg} /> : null}\n              <input\n                accept=\"image/*\"\n                className={classes.inputFile}\n                id=\"icon-button-keynamebg\"\n                type=\"file\"\n                name=\"keyNameBg\"\n                onChange={(e) => handelFileUpload(e)}\n              />\n              <label htmlFor=\"icon-button-keynamebg\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"span\"\n                >\n                  <RiImageAddLine style={{ color: \"#b9bbbe\" }} />\n                </IconButton>\n                上傳輸入姓名頁背景\n              </label>\n              <br />\n              {/* {preview['keyNameImage'] && <img width=\"80\" src={preview['keyNameImage']} />} */}\n              {allSettings.keyNameImage  ? <img width=\"80\" src={allSettings.keyNameImage} /> : null}\n              <input\n                accept=\"image/*\"\n                className={classes.inputFile}\n                id=\"icon-button-keynameImage\"\n                type=\"file\"\n                name=\"keyNameImage\"\n                onChange={(e) => handelFileUpload(e)}\n              />\n              <label htmlFor=\"icon-button-keynameImage\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"span\"\n                >\n                  <RiImageAddLine style={{ color: \"#b9bbbe\" }} />\n                </IconButton>\n                上傳輸入姓名頁主題\n              </label>\n              <br />\n              <TextField\n                id=\"outlined-basic\"\n                label=\"輸入名字延遲時間\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={allSettings.keyNameDelay}\n                name=\"keyNameDelay\"\n                onChange={e => handleChange(e)}\n                style={{\n                  backgroundColor: \"rgb(45, 45, 73)\",\n                  borderRadius: \"5px\",\n                  color: \"white\",\n                }}\n              />\n              <br />\n              <FormControlLabel\n                control={<IOSSwitch checked={allSettings.testMode} onChange={(e) => handleCheck(e)} name=\"testMode\" />}\n                label=\"測試模式\"\n              />\n              <TextField\n                id=\"outlined-basic\"\n                label=\"測試數量\"\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={allSettings.testNameNumber}\n                name=\"testNameNumber\"\n                onChange={e => handleChange(e)}\n                style={{\n                  backgroundColor: \"rgb(45, 45, 73)\",\n                  borderRadius: \"5px\",\n                  color: \"white\",\n                }}\n              />\n              <br />\n              <p>進階設定</p>\n              <FormControlLabel\n                control={<IOSSwitch checked={allSettings.webSocket} onChange={(e) => handleCheck(e)} name=\"webSocket\" />}\n                label=\"WebSocket\"\n              />\n            </Grid>\n          </Grid>\n      </Grid>\n\n      <div style={{padding:\"10px\", background: \"black\", bottom: \"0px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"100%\", position: \"fixed\" }}>\n        <div style={{transform:\"translateX(-50%)\"}}>\n        <Button\n          // onClick={handleClose}\n\n          style={{ color: \"white\" }}>\n          取消\n        </Button>\n        <Fab variant=\"extended\" onClick={sendSettings}>\n          <NavigationIcon className={classes.extendedIcon} />\n          更新設定\n        </Fab>\n        </div>\n       \n      </div>\n\n    </div>\n  );\n}\n\nexport default Chat;\n"],"sourceRoot":""}