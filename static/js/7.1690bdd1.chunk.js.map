{"version":3,"sources":["Apis.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","models/WsConnKeeper.js","Components/NameUnit.js","Components/EntranceUnit.js","Components/components/youtube.js","Components/Entrance.js"],"names":["AccessToken","backendUrl","backendPatchUrl","process","REACT_APP_PATCH_API_URL","storageToken","sessionStorage","getItem","axiosConfig","headers","Authorization","getAccessToken","setAccessToken","token","login","data","url","axios","post","replace","registerWs","console","log","get","sendMessage","sendBroadcast","query","getSite","getProvider","patchBooks","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","hearbeatTrigger","checkConnectionHealthTimer","React","memo","name","setNamesCount","namesCount","allSettings","nameColor","speed","colorType","fontSize","useState","showUnit","setShowUnit","number1","useMemo","random","number2","number3","number4","classes","makeStyles","root","position","opacity","animation","height","width","animationDelay","transform","background","word","color","hsl","fontWeight","useStyles","inSpeed","useEffect","setTimeout","clearTimeout","className","WsConnection","undefined","isHealthyWs","unhealthyCounter","checkConnectionHealth","removeEventListener","getPong","clearInterval","openConnection","Apis","setInterval","ping","firstCheckDelay","interval","readyState","WebSocket","OPEN","addEventListener","send","CLOSED","event","JSON","parse","Type","shutdownConnection","close","a","Promise","reslove","resp","hashKey","toString","firstPingTrigger","firstCheckInterval","counter","t","closeConnection","currentConnection","EntranceUnit","mainEvent","number","webSocket","enterOrNot","allNames","setAllNames","postLogin","username","password","jwt_decode","jwtToken","setItem","sessionToken","WsConnKeeper","then","isConnected","wsConn","onmessage","msg","id","RequestId","result","Result","prev","filteredData","filter","item","time","Date","catch","reason","db","collection","doc","where","now","setSeconds","getSeconds","firebase","firestore","Timestamp","fromDate","getStartOfTenSecond","onSnapshot","snapshot","docs","map","NameUnit","theme","videoResponsive","overflow","paddingBottom","iframe","left","top","minHeight","YoutubeEmbed","embedId","src","frameBorder","allow","allowFullScreen","title","getRandomString","length","randomChars","i","charAt","Math","floor","Entrance","props","entranceVideo","predictPopulation","testMode","testNameNumber","titleFontSize","subtitleFontSize","namesFly","goalNumber","parseInt","distance","nameEnter","display","justifyContent","alignItems","flexDirection","transition","bg","backgroundImage","entranceBg","backgroundPosition","backgroundRepeat","backgroundSize","subtitle","subtitleColor","css","backgroundColor","letterSpacing","textShadow","titleColor","video","entranceTitle","entranceSubTitle","e","key"],"mappings":"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","file":"static/js/7.1690bdd1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst backendUrl =\"http://34.80.98.184/\"\nconst backendPatchUrl = process.env.REACT_APP_PATCH_API_URL\nconst storageToken = sessionStorage.getItem(\"Token\")\n\nvar AccessToken;\n\nconst setAccessToken = (token) => {\n    AccessToken = token;\n}\n\nconst getAccessToken = () => {\n    return AccessToken;\n}\n\nconst axiosConfig = () => {\n    let obj = {\n        headers: {\n            // Authorization: `Bearer ${AccessToken}`\n            Authorization: `Bearer ${storageToken}`\n        }\n    };\n    return obj;\n}\n\nconst login = (data) => {\n    let url = `${backendUrl}Auth/SignIn`;\n    return axios.post(url.replace(\"undefined\",\"\"), data)\n}\n\nconst registerWs = () => {\n    console.log(storageToken)\n    let url = `${backendUrl}Auth/RegisterWs`;\n    return axios.get(url.replace(\"undefined\",\"\"), axiosConfig())\n}\n\nconst sendMessage = (data) => {\n    let url = `${backendUrl}notify/send`;\n    return axios.post(url.replace(\"undefined\",\"\"),data, axiosConfig())\n}\nconst sendBroadcast = (data) => {\n    let url = `${backendUrl}notify/broadcast`;\n    return axios.post(url.replace(\"undefined\",\"\"),data, axiosConfig())\n}\n\nconst query = (data) => {\n    let url = `${backendUrl}Summon/Call`;\n    return axios.post(url.replace(\"undefined\",\"\"), data, axiosConfig());\n}\n\nconst getSite = (data) => {\n    let url = `${backendUrl}ui/GetSite`;\n    return axios.get(url.replace(\"undefined\",\"\"), axiosConfig())\n}\n\nconst getProvider = (data) => {\n    let url = `${backendUrl}ui/GetProvider`;\n    return axios.get(url.replace(\"undefined\",\"\"), axiosConfig())\n}\n\nconst patchBooks = (data) => {\n    let url = `${backendPatchUrl}api/Patch`;\n    return axios.post(url.replace(\"undefined\",\"\"), data, axiosConfig())\n}\n\nexport default {\n    getAccessToken,\n    setAccessToken,\n    login,\n    registerWs,\n    sendMessage,\n    sendBroadcast,\n    query,\n    getSite,\n    getProvider,\n    patchBooks,\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Apis from \"../Apis\";\r\n\r\n\r\nconst backendUrl = \"ws://34.80.98.184:5002/\"\r\nvar WsConnection = undefined;\r\nvar isHealthyWs = false;\r\n\r\nvar hearbeatTrigger;\r\nvar checkConnectionHealthTimer;\r\nvar unhealthyCounter = 0;\r\n\r\nvar firstCheckInterval = 100;\r\nvar firstCheckTimes = 50;\r\nvar firstPingDelay = 500;\r\nvar firstCheckDelay = firstCheckInterval * firstCheckTimes;\r\n\r\nconst checkConnectionHealth = () => {\r\n    if(WsConnection) {\r\n        WsConnection.removeEventListener('message', getPong);\r\n    }\r\n    clearTimeout(checkConnectionHealthTimer);\r\n    \r\n    if(!isHealthyWs) {\r\n        unhealthyCounter ++;\r\n        if(unhealthyCounter > 2) {\r\n            clearInterval(hearbeatTrigger);\r\n            hearbeatTrigger = undefined;\r\n            openConnection(Apis.getAccessToken());\r\n\r\n            var checkDelay = firstCheckDelay + (2 * firstPingDelay)\r\n            setTimeout(() => {\r\n                if(!hearbeatTrigger) {\r\n                    hearbeatTrigger = setInterval(() => ping(3000), 6000);\r\n                }\r\n            }, checkDelay);\r\n        }\r\n    }\r\n}\r\n\r\nconst ping = (interval) => {\r\n    isHealthyWs = false;\r\n    if(WsConnection && WsConnection.readyState == WebSocket.OPEN) {\r\n        WsConnection.addEventListener('message', getPong);\r\n        WsConnection.send('{\"Type\": 9}');\r\n        checkConnectionHealthTimer = setTimeout(() => checkConnectionHealth(), interval)\r\n    }\r\n    \r\n    if(WsConnection && WsConnection.readyState == WebSocket.CLOSED) {\r\n        checkConnectionHealth();\r\n    }\r\n}\r\n\r\nconst getPong = (event) => {\r\n    var data = JSON.parse(event.data);\r\n    if(data.Type == 10) { //server feedback PONG\r\n        isHealthyWs = true;\r\n    }\r\n}\r\n\r\nconst shutdownConnection = () => {\r\n    isHealthyWs = false;\r\n\r\n    if(WsConnection && WsConnection.readyState != WebSocket.CLOSED) {\r\n        WsConnection.close();\r\n    }\r\n}\r\n\r\nconst closeConnection = () => {\r\n    shutdownConnection();\r\n    WsConnection = undefined;\r\n}\r\n\r\nconst openConnection = async () => {\r\n    if(WsConnection && isHealthyWs) {\r\n        return new Promise((reslove) => reslove(isHealthyWs));\r\n    }\r\n    else{\r\n        shutdownConnection();\r\n    }\r\n\r\n    try {        \r\n        var resp = await Apis.registerWs();\r\n\r\n        let hashKey = resp.data.toString();\r\n        if(!hashKey) return;\r\n\r\n        WsConnection = new WebSocket(`${backendUrl}${hashKey}`.replace(\"undefined\",\"\"));\r\n\r\n        var firstPingTrigger = setTimeout(() => {\r\n            ping(firstCheckDelay);\r\n            clearTimeout(firstPingTrigger);\r\n        }, firstPingDelay);        \r\n\r\n        return new Promise((reslove) => {\r\n            var counter = 0;\r\n            var t = setInterval(() => {\r\n                counter++;\r\n                if(counter >= firstCheckTimes || isHealthyWs){\r\n                    clearInterval(t);\r\n                    clearTimeout(firstPingTrigger);\r\n                    WsConnection.removeEventListener('message', getPong);\r\n                    clearTimeout(checkConnectionHealthTimer);\r\n                    unhealthyCounter = 0;\r\n\r\n                    if(isHealthyWs) {\r\n                        clearInterval(hearbeatTrigger);\r\n                        hearbeatTrigger = setInterval(() => ping(3000), 6000);\r\n                    }\r\n\r\n                    reslove(isHealthyWs);\r\n                }\r\n\r\n            }, firstCheckInterval);\r\n        });\r\n    }\r\n    catch(error) {\r\n        if(!WsConnection) {\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nconst currentConnection = () => {\r\n    return WsConnection;\r\n}\r\n\r\nexport default {\r\n    closeConnection,\r\n    openConnection,\r\n    currentConnection,\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { random } from 'lodash';\n\nexport default React.memo(({ name, namesCount, setNamesCount, allSettings }) => {\n    const { nameColor, speed, colorType, fontSize } = allSettings;\n    const [showUnit, setShowUnit] = useState(true)\n    const number1 = useMemo(() => random(2000, -2000), []);\n    const number2 = useMemo(() => random(2000, -2000), []);\n    const number3 = useMemo(() => random(10, -10), []);\n    const number4 = useMemo(() => random(360), []);\n    const useStyles = makeStyles(() => ({\n        root: {\n            position: \"absolute\",\n            opacity: 0.9,\n            animation: `move ${speed}s ease-out forwards`,\n            height: \"150px\",\n            width: \"320px\",\n            animationDelay: \"-0.2s\",\n            transform: `translate3d(${number1}px, ${number2}px, ${number3}px) `,\n            background: \"transparent\"\n        },\n        word: {\n            animation: `bigtosmall ${speed}s forwards`,\n            fontSize: `${fontSize}px`,\n            color: `hsl(${colorType === 'specific' ? nameColor.hsl[0] : number4} , 70%, 50%)`,\n            fontWeight: \"bold\",\n        }\n    }\n    )\n    );\n\n    const classes = useStyles();\n\n    let inSpeed = (speed * 1000) || 0;\n\n    useEffect(() => {\n        // window.instancesCount += 1\n        setNamesCount(namesCount => {\n            return namesCount + 1\n        })\n\n        if (name === '') {\n            setShowUnit(false);\n        }\n        setTimeout(() => {\n            setShowUnit(false)\n        }, inSpeed)\n\n        return clearTimeout();\n    }, [])\n\n\n    return showUnit ?\n        (\n            <div className={classes.root}>\n                <div className={classes.word}>{name}</div>\n\n            </div>\n        ) : null\n})","import React, { useState, useEffect } from 'react';\nimport { db } from \"../Firebase/Firebase\";\nimport NameUnit from \"./NameUnit\";\nimport firebase from \"firebase/app\";\n\n// we connection\nimport WsConnKeeper from '../models/WsConnKeeper'\nimport Apis from '../Apis';\nimport jwt_decode from \"jwt-decode\";\n\nfunction EntranceUnit({ mainEvent, number, allSettings, namesCount, setNamesCount,webSocket, enterOrNot }) {\n    const [allNames, setAllNames] = useState([]);\n    function getStartOfTenSecond() {\n        const now = new Date()\n        now.setSeconds(now.getSeconds() - 10) \n        const timestamp = firebase.firestore.Timestamp.fromDate(now)\n        return timestamp // ex. 1631246400\n    }\n    // ws connection\n    const postLogin = async () => {\n        const data = {\n            username: process.env.REACT_APP_USER,\n            password: process.env.REACT_APP_PWD\n        }\n\n        try {\n            let resp = await Apis.login(data);\n            try {\n                jwt_decode(resp.data);\n            }\n            catch {\n                console.log(\"登入失敗\")\n                return;\n            }\n\n            let jwtToken = resp.data;\n\n            sessionStorage.setItem('Token', jwtToken);\n            // store.dispatch(setAccessToken(jwtToken));\n            Apis.setAccessToken(jwtToken);\n            // store.dispatch(setUiState(uiStateEnum.StandBy));\n        }\n        catch (error) {\n            // setIsLoginFailed(true);\n            // setFailMessage(error.toString());\n        }\n    }\n// ws login\nconst sessionToken  = sessionStorage.getItem('Token');\n    useEffect(() => {\n        if (webSocket === true ) {\n            postLogin();\n        }\n    }, [])\n// we register and process\n    if (webSocket === true && sessionToken) {\n        WsConnKeeper\n            .openConnection()\n            .then((isConnected) => {\n                if (isConnected) {\n                    var wsConn = WsConnKeeper.currentConnection();\n                    if (wsConn.readyState != WebSocket.OPEN) {\n             \n                        // setTimeout(() => {\n                        //     store.dispatch(setQueryResult({\n                        //         alertType: \"warning\",\n                        //         alert: \"與伺服器重新連線中, 請稍後重試, 或重整頁面(按F5)重新登入, 謝謝\",\n                        //         rptContent: \"\",\n                        //         rptContentS8: \"\",\n                        //     }));\n                        //     store.dispatch(setUiState(uiStateEnum.StandBy));\n                        // },\n                        //     10);\n                    }\n                    else {\n                        wsConn.onmessage = (msg) => {\n                            var data = JSON.parse(msg.data);\n                            if (data.Type != 2) return;\n                            const id = data.RequestId.toString();\n                            const result = data.Result.toString();\n                            if(result ){\n                                setAllNames(\n                                    (prev)=>{\n                                        const filteredData = prev.filter((item)=>{\n                                            return item.time > Date.parse(new Date())-8000\n                                        })\n                                        return[\n                                        ...filteredData,\n                                        {name:result,id:id,time:Date.parse(new Date())}\n                                    ]\n                                    }\n                                // [{name:result}]\n                                    // result.map((item)=>{\n                                    //     return {\n                                    //         name: item\n                                    //     }\n                                    // })\n                                )\n                            }\n                            // console.log(msg);\n\n                            // if (IsOnQuery) {\n                            //     var data = JSON.parse(msg.data);\n                            //     if (data.Type != 1) return;\n\n                            //     var qResult = JSON.parse(data.Result.toString());\n                            //     var contents;\n                            //     if (qResult.messageType == 0 || qResult.messageType == \"MESSAGE\") {\n                            //         contents =\n                            //         {\n                            //             alertType: \"warninig\",\n                            //             alert: qResult.content1,\n                            //             rptContent: \"\",\n                            //             rptContentS8: \"\",\n                            //         };\n                            //     }\n                            //     else {\n                            //         var now = new Date();\n                            //         contents =\n                            //         {\n                            //             alertType: \"success\",\n                            //             alert: `查詢時間: ${now.toLocaleDateString()} ${now.toLocaleTimeString()} 遊戲商:${currentDisplay.provider}`,\n                            //             rptContent: `data:image/png;base64,${qResult.content1}`,\n                            //             rptContentS8: `data:image/png;base64,${qResult.content2}`,\n                            //         };\n                            //         store.dispatch(setQueryResultTime({\n                            //             providerQueryTime: qResult.content3,\n                            //             s8QueryTime: qResult.content4,\n                            //         }));\n                            //     }\n                            //     store.dispatch(setUiState(uiStateEnum.StandBy));\n                            //     store.dispatch(setQueryResult(contents));\n                            // }\n                        }\n                    }\n                }\n                else {\n                    console.log('else')\n                    // setTimeout(() => {\n                    //         store.dispatch(setQueryResult({\n                    //             alertType: \"warning\",\n                    //             alert: \"目前無法與伺服器正常連線, 請稍後重整頁面(按F5), 或連絡工程人員, 謝謝\",\n                    //             rptContent: \"\",\n                    //             rptContentS8: \"\",\n                    //         }));\n                    //         store.dispatch(setUiState(uiStateEnum.StandBy));\n                    //     },\n                    //     10);\n                    WsConnKeeper.closeConnection();\n                }\n            }\n            )\n            .catch((reason) => {\n                console.log(reason)\n                // setTimeout(() => {\n                //     store.dispatch(setQueryResult({\n                //         alertType: \"warning\",\n                //         alert: \"目前無法與伺服器正常連線, 請稍後重整頁面(按F5), 或連絡工程人員, 謝謝\\r\" + reason,\n                //         rptContent: \"\",\n                //         rptContentS8: \"\",\n                //     }));\n                //     store.dispatch(setUiState(uiStateEnum.StandBy));\n                // },\n                // 10);\n            })\n    }\n\n    // firebase connection\n    useEffect(() => {\n        if (mainEvent && webSocket === false) {\n            console.log('not webSocket')\n            db.collection(\"events\")\n                .doc(mainEvent)\n                .collection(`names_${number}`)\n                .where(\"created_at\", '>', getStartOfTenSecond())\n                .onSnapshot((snapshot) => {\n                    \n                    setAllNames(\n                        snapshot.docs.map((item) => {\n                            return {\n                                name: item.data().name,\n                                // number1: item.data().number1,\n                                // number2: item.data().number2,\n                                // number3: item.data().number3,\n                                // number4: item.data().number4,\n                                id: item.id\n                            }\n                        })\n                    )\n\n                });\n        }\n\n    }, [mainEvent,webSocket])\n    return (\n        <>\n            {allNames.map((item) => {\n                return (\n                    <NameUnit\n                        key={item.id}\n                        name={item.name}\n\n                        allSettings={allSettings}\n                        namesCount={namesCount}\n                        setNamesCount={setNamesCount}\n                    />\n                )\n            })}\n        </>\n    )\n}\n\nexport default EntranceUnit;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  videoResponsive: {\n    overflow: \"hidden\",\n    paddingBottom: \"56.25%\",\n    position: \"relative\",\n    height: 0,\n    position: 'absolute',\n    // minWidth: \"100%\",\n    minHeight: \"50vh\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    zIndex: \"0\",\n    width: \"100%\",\n  },\n  iframe: {\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    minHeight: \"100%\",\n    width: \"130%\",\n    position: \"absolute\"\n  }\n\n}))\n\nconst YoutubeEmbed = ({ embedId }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.videoResponsive}>\n      <iframe className={classes.iframe}\n        width=\"853\"\n        height=\"480\"\n        src={`https://www.youtube.com/embed/${embedId}?feature=oembed&controls=0&mute=1&autoplay=1&loop=1&playlist=${embedId}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        title=\"Embedded youtube\"\n      />\n    </div>\n  )\n};\n\n\nexport default YoutubeEmbed;","import React, { useState } from 'react';\nimport EntranceUnit from \"./EntranceUnit\";\nimport NameUnit from \"./NameUnit\";\nimport { makeStyles } from '@material-ui/core';\nimport { default as Youtube } from \"./components/youtube\";\n\n\nconst getRandomString = (length) => {\n    const randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (var i = 0; i < length; i++) {\n        result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n    }\n    return result;\n};\n\nfunction Entrance(props) {\n    const { mainEvent, allSettings } = props;\n    const [namesCount, setNamesCount] = useState(0);\n    const entranceUnitNumber = 20;\n    const { entranceVideo,\n        predictPopulation,\n        testMode,\n        webSocket,\n        testNameNumber,\n        titleFontSize,\n        subtitleFontSize,\n        namesFly,\n    } = allSettings;\n\n    let goalNumber = parseInt(predictPopulation) || 1000;\n\n\n    let setDistance = () => {\n        return -4000 + (4000 / goalNumber * (namesCount))\n    }\n\n    const enterOrNot = () => {\n        let distance = setDistance();\n        if (distance > 1 || !namesFly) return '0';\n        return distance\n    }\n    let nameEnter = enterOrNot() === '0' ? false : true;\n\n    const useStyles = makeStyles(() => ({\n        root: {\n            position: 'absolute',\n            transform: `translate3d(0 ,0 ,${enterOrNot()}px)`,\n            display: `flex`,\n            justifyContent: `center`,\n            alignItems: `center`,\n            flexDirection: `column`,\n            // marginBottom: `100px`,\n            transition: \"all 0.2s\",\n            animation: `${!nameEnter ? 'tilt 6s linear infinite' : ''}`\n        },\n        bg: {\n            position: 'absolute',\n            backgroundImage: `url(${allSettings.entranceBg})`,\n            width: \"100%\",\n            minHeight: \"100%\",\n            backgroundPosition: \"center,center\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\"\n        },\n        subtitle: {\n            color: `${!nameEnter ? 'transparent' : allSettings.subtitleColor ? allSettings.subtitleColor.css.backgroundColor : '#FFFFFF'}`,\n            letterSpacing: '5px',\n            textShadow: `0 0 1px var(--color),0 0 50px var(--color),0 0 100px var(--color)`,\n            animation: `${!nameEnter ? ' colorSwap 10s linear infinite' : ''}`,\n            fontSize: `${subtitleFontSize}px`,\n\n        },\n        title: {\n            color: `${!nameEnter ? 'transparent' : allSettings.titleColor ? allSettings.titleColor.css.backgroundColor : '#FFFFFF'}`,\n            textShadow: `0 0 1px var(--color),0 0 50px var(--color),0 0 100px var(--color)`,\n            animation: `${!nameEnter ? ' colorSwap 10s linear infinite' : ''}`,\n            fontSize: `${titleFontSize}px`,\n            letterSpacing: '10px'\n        },\n        video: {\n            position: 'absolute',\n            width: \"100%\",\n            minHeight: \"50vh\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%,-50%)\"\n        }\n    }\n    )\n    );\n    const classes = useStyles();\n\n\n    return (\n        <div className=\"entrance--container\">\n            {/* <Loading speed={allSettings.speed}/> */}\n            <div className={classes.bg}></div>\n\n            {entranceVideo && <Youtube embedId={entranceVideo} />}\n            <div className=\"entrance--title__container\">\n                <div className={classes.root} >\n                    <div className={classes.title}>{allSettings.entranceTitle !== '' ? allSettings.entranceTitle : ''}</div>\n                    <div className={classes.subtitle}>{allSettings.entranceSubTitle !== '' ? allSettings.entranceSubTitle : ''}</div>\n                </div>\n            </div>\n            <div className=\"entrance--wrapper\">\n                <div className=\"bubble--wrapper\">\n                    {nameEnter && !testMode && webSocket === true && <EntranceUnit\n                        {...{\n                            allSettings,\n                            webSocket,\n                            mainEvent,\n                            namesCount,\n                            setNamesCount,\n                            nameEnter\n                        }} />}\n                    {nameEnter && !testMode && webSocket === false && [...Array(entranceUnitNumber)]\n                        .map((e, i) =>\n                            <EntranceUnit\n                                key={i}\n                                number={i}\n                                {...{\n                                    allSettings,\n                                    webSocket,\n                                    mainEvent,\n                                    namesCount,\n                                    setNamesCount,\n                                    nameEnter\n                                }} />)}\n                    {testMode && [...Array(+testNameNumber)].map((e, i) =>\n                        <NameUnit\n                            {...{\n                                allSettings,\n                                mainEvent,\n                                namesCount,\n                                setNamesCount,\n                                nameEnter\n                            }}\n                            name={getRandomString(5)}\n                            key={i} number={i}\n                        />)}\n                </div>\n            </div>\n            <span className=\"namesCount_container\">{namesCount}</span>\n        </div>\n    )\n}\n\nexport default Entrance;\n\n"],"sourceRoot":""}