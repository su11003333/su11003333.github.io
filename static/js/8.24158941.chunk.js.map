{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","Components/Home.js"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","theme","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","easeIn","fontSize","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","RadioGroupContext","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","_props$color","color","nameProp","onChangeProp","_props$size","size","radioGroup","createChainedFunction","concat","capitalize","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","Card","_props$raised","raised","Paper","elevation","overflow","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","textAlign","pointerEvents","right","bottom","borderRadius","short","CardContent","_props$component","Component","paddingBottom","useStyles","makeStyles","paddingTop","heading","fontWeight","subHeading","channelDiv","channelContent","flexDirection","alignItems","square","rootChannel","overflowY","channelText","channelCard","boxShadow","Dashboard","useState","events","setEvents","history","useHistory","mainEvent","setMainEvent","useEffect","db","collection","orderBy","onSnapshot","snapshot","docs","map","eventName","data","doc","handleChange","e","set","style","Grid","container","item","xs","Typography","md","onClick","push","Avatar","variant","substr","toUpperCase"],"mappings":"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","file":"static/js/8.24158941.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"../Firebase/Firebase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: \"50px\",\n    paddingBottom: \"25px\",\n    color: \"#f0f0f0\",\n  },\n  heading: {\n    fontSize: \"2.2em\",\n    fontWeight: \"700\",\n  },\n  subHeading: {\n    fontSize: \"1.6em\",\n  },\n  channelDiv: {\n    padding: \"15px\",\n  },\n  channelContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    padding: \"20px\",\n    alignItems: \"center\",\n  },\n  square: {\n    height: \"80px\",\n    width: \"80px\",\n    backgroundColor: \"#8fabbd66\",\n    fontSize: \"2rem\",\n  },\n  rootChannel: {\n    height: \"calc(100vh - 185px)\",\n    position: \"relative\",\n    padding: \"15px\",\n    overflowY: \"scroll\",\n  },\n  channelText: {\n    paddingTop: \"10px\",\n    fontSize: \"1.2rem\",\n  },\n  channelCard: {\n    backgroundColor: \"#1e2439\",\n    boxShadow:\n      \"0px 3px 4px -1px rgb(0 0 0 / 17%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\n    color: \"rgb(220, 221, 222)\",\n  },\n}));\n\nfunction Dashboard() {\n  const classes = useStyles();\n  const [events, setEvents] = useState([]);\n  const history = useHistory();\n  const [mainEvent, setMainEvent] = useState('');\n\n  useEffect(() => {\n    db.collection(\"events\")\n      .orderBy(\"eventName\", \"asc\")\n      .onSnapshot((snapshot) => {\n        setEvents(\n          snapshot.docs.map((event) => ({\n            eventName: event.data().eventName,\n            id: event.id,\n          }))\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    db.collection(\"projectSettings\")\n      .doc(\"settings\")\n      .onSnapshot((snapshot) => {\n        let eventName = snapshot.data().mainEvent;\n        setMainEvent(\n          eventName\n        )\n      })\n  }, [])\n\n  const goToEvent = (id) => {\n    history.push(`/event/${id}`);\n  };\n  const handleChange = (e) => {\n    setMainEvent(e.target.value);\n    db.collection(\"projectSettings\")\n      .doc(\"settings\")\n      .set({ mainEvent: e.target.value })\n  }\n  return (\n    <div style={{ backgroundColor: \"rgb(34 39 59)\" }}>\n      <Grid container className={classes.root}>\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\n          <Typography component=\"h1\" className={classes.heading}>\n            控制後台\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.rootChannel}>\n        {events.map((event) => (\n          <Grid\n            item\n            xs={6}\n            md={3}\n            className={classes.channelDiv}\n            key={event.id}\n          >\n            <Radio\n              checked={mainEvent === event.id}\n              onChange={handleChange}\n              value={event.id}\n              name=\"radio-buttons\"\n              inputProps={{ 'aria-label': 'A' }}\n            />\n            <Card className={classes.channelCard}>\n              <CardActionArea\n                style={{ display: \"flex\" }}\n                onClick={() => goToEvent(event.id)}\n              >\n                <CardContent className={classes.channelContent}>\n                  <Avatar\n                    variant=\"square\"\n                    className={classes.square}\n                    style={{ backgroundColor: \"#6a9ec066\" }}\n                  >\n                    {event.eventName.substr(0, 1).toUpperCase()}\n                  </Avatar>\n                  <Typography className={classes.channelText}>\n                    {event.eventName}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}